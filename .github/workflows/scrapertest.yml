name: scrapertest

on:
  push:
    branches:
      - master
  #     - dev
  # pull_request:
  #   branches:
  #     - master
  #     - dev

env:
  CARGO_TERM_COLOR: always

jobs:

  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-18.04, macos-10.15]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'true'
      
      - run: npm install
        working-directory: 'turbo_frontend'

      - run: npm run build
        working-directory: 'turbo_frontend'

      - uses: actions/setup-go@v2
        with:
          go-version: '1.15.2'
      
      - run: go get golang.org/dl/go1.15.2
      
      - run: go1.15.2 download

      - name: build rclone lib
        run: ./build-turbo.sh
        working-directory: 'rclone'
    
      - run: cargo build --release --verbose
        working-directory: 'scrapertest'

  #     - name: Run tests
  #       run: cargo test --verbose

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}
          path: target/release/scrapertest

        
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v1
        with:
          name: ubuntu-18.04
          name: macos-10.15

      - run: brotli -v scrapertest
        working-directory: 'ubuntu-18.04'

      - run: brotli -v scrapertest
        working-directory: 'macos-10.15'

      - id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: master-${{ github.sha }}
          draft: false
          prerelease: true

      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ubuntu-18.04/scrapertest.br
          asset_name: scrapertest-linux-${{ github.sha }}.br
          asset_content_type: application/octet-stream

      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./macos-10.15/scrapertest.br
          asset_name: scrapertest-macos-${{ github.sha }}.br
          asset_content_type: application/octet-stream
